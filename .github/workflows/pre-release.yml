name: Pre-release

on:
  push:
    tags:
    - v*

env:
  REGISTRY: docker.io
  # repo only - no registry, no tag
  IMAGE_REPO: ${{ vars.ZITI_AGENT_IMAGE_REPO || 'netfoundry/ziti-k8s-agent' }}

jobs:
  pre-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write  # need write to create release
      # remainder are needed if registry is ghcr.io
      #packages: write
      #id-token: write
      #attestations: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY}}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY}}
          # TODO: delete the "DOCKERHUB_*" variants after migrating to openziti org
          username: ${{ vars.DOCKER_HUB_API_USER || secrets.DOCKER_HUB_API_USER || secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_API_TOKEN || secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Define Docker Tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY}}/${{ env.IMAGE_REPO }}
          tags: |

            # set semver tag on releases, e.g., "1.2.3", "3.2.1-rc9"
            type=match,pattern=v(.*),group=1,enable=${{startsWith(github.ref_name, 'v')}}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.IMAGE_REPO }}:build
          cache-to: type=registry,ref=${{ env.IMAGE_REPO }}:build,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY}}/${{ env.IMAGE_REPO}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --prerelease \
            --generate-notes \
            --title "${{ github.ref_name }}"
